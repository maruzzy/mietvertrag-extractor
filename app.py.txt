import streamlit as st
import pdfplumber
import re

def extract_text_from_pdf(file):
    text = ""
    with pdfplumber.open(file) as pdf:
        for page in pdf.pages:
            text += page.extract_text() + "\n"
    return text

def extract_contract_info(text):
    info = {}

    mieter_match = re.search(r"Mieter(?:in)?:\s*(.+)", text)
    vermieter_match = re.search(r"Vermieter(?:in)?:\s*(.+)", text)
    info['Mieter'] = mieter_match.group(1).strip() if mieter_match else None
    info['Vermieter'] = vermieter_match.group(1).strip() if vermieter_match else None

    adresse_match = re.search(r"Adresse(?: der Wohnung)?:\s*(.+)", text)
    info['Adresse'] = adresse_match.group(1).strip() if adresse_match else None

    beginn_match = re.search(r"(Mietbeginn|Beginn des Mietverh√§ltnisses):\s*([0-9]{2}\.[0-9]{2}\.[0-9]{4})", text)
    info['Mietbeginn'] = beginn_match.group(2).strip() if beginn_match else None

    miete_match = re.search(r"(Monatsmiete|Kaltmiete):\s*([\d\.,]+)\s*‚Ç¨", text)
    info['Monatsmiete'] = miete_match.group(2).replace('.', '').replace(',', '.') if miete_match else None

    nebenkosten_match = re.search(r"Nebenkosten:\s*([\d\.,]+)\s*‚Ç¨", text)
    info['Nebenkosten'] = nebenkosten_match.group(1).replace('.', '').replace(',', '.') if nebenkosten_match else None

    dauer_match = re.search(r"(Dauer|Laufzeit) des Mietverh√§ltnisses:\s*(.+)", text)
    info['Vertragsdauer'] = dauer_match.group(2).strip() if dauer_match else None

    return info

st.title("Mietvertrags-Extractor üè†")
st.write("Lade einen Mietvertrag als PDF hoch. Das Tool extrahiert automatisch die wichtigsten Infos.")

uploaded_file = st.file_uploader("PDF hochladen", type="pdf")

if uploaded_file is not None:
    try:
        with st.spinner('Analysiere PDF...'):
            text = extract_text_from_pdf(uploaded_file)
            info = extract_contract_info(text)
        st.success("Fertig! Das sind die extrahierten Infos:")
        st.json(info)
        st.download_button(
            label="Infos als JSON herunterladen",
            data=str(info),
            file_name="mietvertrag_info.json",
            mime="application/json"
        )
    except Exception as e:
        st.error(f"Fehler beim Auslesen: {e}")